define("ace/mode/nlp_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/text_highlight_rules"],function(e,t,n){"use strict";var r=e("../lib/oop"),i=e("./text_highlight_rules").TextHighlightRules,s=function(){this.$rules={start:[{include:"#expression"},{token:"keyword.region.nlp",regex:/@(?:@)?(?:CHECK|CODE|DECL|MULTI|NODES|PATH|POST|PRE|RULES)\b/},{token:"keyword.constants.nlp",regex:/\b_ROOT\b/},{token:"keyword.other.nlp",regex:/\b(?:cap|cout|else|gp|group|if|inc|return|while)\b/,caseInsensitive:!0},{token:"keyword.operator.nlp",regex:/\b(?:and|not|or|in|>|<|<>|\/|\|+|-|=)\b/,caseInsensitive:!0},{token:["text","text"],regex:/([\w_]+)(\s*\()/}],"#functions-node":[{token:"entity.name.function.letter.nlp",regex:/\b(?:G|N|S|X|L)\b/}],"#functions":[{token:"entity.name.function.nlp",regex:/\b(?:addarg|addattr|addcnode|addconcept|addconval|addnode|addnumval|addstmt|addstrs|addstrval|addsval|addword|arraylength|attrchange|attrexists|attrname|attrtype|attrvals|attrwithval|batchstart|cap|cbuf|closefile|conceptname|conceptpath|conval|cout|coutreset|dballocstmt|dbbindcol|dbclose|dbexec|dbexecstmt|dbfetch|dbfreestmt|dbopen|deaccent|debug|dictfindword|dictfirst|dictgetword|dictnext|down|else|eltnode|excise|exitpass|exittopopup|factorial|fail|fileout|findana|findattr|findattrs|findconcept|findhierconcept|findnode|findphrase|findroot|findvals|findwordpath|firstnode|flt|fltval|fncallstart|fprintgvar|fprintnvar|fprintxvar|fprintvar|gdump|getconcept|getconval|getnumval|getpopupdata|getstrval|getsval|ginc|gp|group|gtolower|guniq|hitconf|if|inc|inheritval|inputrange|inputrangetofile|interactive|kbdumptree|lasteltnode|lastnode|length|lengthr|levenshtein|lextagger|listadd|listnode|LJ|lj|logten|lookup|lowercase|makeconcept|makeparentconcept|makephrase|makestmt|merge|merger|mkdir|movecleft|movecright|movesem|ndump|next|nextattr|nextval|ninc|nodeconcept|nodeowner|noop|num|numrange|numval|openfile|or|pathconcept|percentstr|permuten|phraselength|phraseraw|phrasetext|pncopyvars|pndown|pninsert|pnmakevar|pnname|pnnext|pnprev|pnreplaceval|pnroot|pnsingletdown|pnup|pnvar|pnvarnames|pranchor|prchild|preaction|printvar|pndeletechilds|pnrename|prev|print|printr|prlit|prrange|prtree|prunephrases|prxtree|regexp|regexpi|renameattr|renamechild|renameconcept|renamenode|replaceval|resolveurl|return|returnstmt|rfaaction|rfaactions|rfaarg|rfaargtolist|rfacode|rfaelement|rfaelt|rfaexpr|rfalist|rfalitelt|rfalittoaction|rfalittopair|rfaname|rfanodes|rfanonlit|rfanonlitelt|rfanum|rfaop|rfapair|rfapairs|rfapostunary|rfapres|rfarange|rfarecurse|rfarecurses|rfaregion|rfaregions|rfarule|rfarulelts|rfarulemark|rfarules|rfarulesfile|rfaselect|rfastr|rfasugg|rfaunary|rfavar|rfbarg|rfbdecl|rfbdecls|rightjustifynum|rmattr|rmattrs|rmattrval|rmchild|rmchildren|rmconcept|rmcphrase|rmnode|rmphrase|rmval|rmvals|rmword|sdump|setbase|setlookahead|setunsealed|single|singler|singlex|singlezap|sortconsbyattr|sortchilds|sorthier|sortphrase|sortvals|spellcandidates|spellcorrect|spellword|splice|split|sqlstr|startout|stem|stopout|str|strchar|strchr|strchrcount|strclean|strcontains|strcontainsnocase|strendswith|strequal|strequalnocase|strescape|strunescape|strgreaterthan|strisalpha|strisdigit|strislower|strisupper|strlength|strlessthan|strnotequal|strnotequalnocase|strpiece|strrchr|strspellcandidate|strspellcompare|strstartswith|strsubst|strtolower|strtotitle|strtoupper|strtrim|strval|strwrap|succeed|suffix|system|take|today|topdir|unknown|unpackdirs|up|uppercase|urlbase|urltofile|var|vareq|varfn|varfnarray|varinlist|varne|varstrs|varz|wninit|wnsensestoconcept|wnhypnymstoconcept|while|whilestmt|wordindex|wordpath|writekb|xaddlen|xaddnvar|xdump|xinc|xmlstr|xrename)\b/,caseInsensitive:!0}],"#expression":[{include:"#rules-region"},{include:"#comment"},{include:"#string"},{include:"#literal"}],"#rules-region":[{token:["variable.rewrite.nlp","text","variable.rewrite-symbol.nlp","text","text"],regex:/([_\w]+)(\s*)(?:(\[[^\]]*\]))*(\s*)(<-)/,push:[{token:"keyword.region.nlp",regex:/@@/,next:"pop"},{include:"#token"},{include:"#attributes"},{include:"#constant-nodes"},{include:"#escaped-char"},{include:"#comment-line"}]}],"#attributes":[{token:"punctuation.square.open",regex:/\[/,push:[{token:"punctuation.square.close",regex:/\]/,next:"pop"},{include:"#attribute-equals"},{include:"#constant-nodes"},{include:"#token"},{include:"#attribute"},{include:"#comment-line"},{defaultToken:"meta.rules.rule.attribute.nlp"}]}],"#constant-nodes":[{token:"keyword.constants.nlp",regex:/\b_(?:xWILD|xNUM|xALPHA|xWHITE|xNIL|xSTART|xEND|xCTRL)\b/}],"#attribute-equals":[{token:["text","text","keyword.equals.nlp","text","punctuation.paren.open"],regex:/([_\w]+)(\s*)(=)(\s*)(\()/,push:[{token:"punctuation.paren.open",regex:/\)/,next:"pop"},{include:"#token"},{include:"#attribute"},{include:"#constant-nodes"},{include:"#escaped-char"}]}],"#attribute":[{token:"keyword.attribute.nlp",regex:/\b(?:attr|attrs|da|deacc|deaccent|except|excepts|fail|fails|gp|group|layer|layers|look|lookahead|match|matches|max|min|nest|o|one|opt|option|optional|pass|passes|plus|recurse|ren|rename|s|singlet|star|t|tree|trig|trigger|unsealed)\b/,caseInsensitive:!0}],"#escaped-char":[{token:"constant.character.escape",regex:/\\./}],"#token":[{token:"variable.parameter.nlp",regex:/_[\w]+\b/}],"#comment":[{include:"#comment-line"},{include:"#comment-block"}],"#comment-line":[{token:"comment.line.nlp",regex:/#.*$/}],"#comment-block":[{token:"comment.block.begin.nlp",regex:/\/\*/,push:[{token:"comment.block.end.nlp",regex:/\*\//,next:"pop"},{defaultToken:"comment.block.nlp"}]}],"#string":[{include:"#qstring-double"}],"#qstring-double":[{token:"string.double.nlp",regex:/"/,push:[{token:"string.double.nlp",regex:/\"|[^\\$]$/,next:"pop"},{include:"#string-character-escape"},{defaultToken:"string.double.nlp"}]}],"#string-character-escape":[{token:"constant.character.escape.nlp",regex:/\\(?:x[\da-fA-F]{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)/}],"#literal":[{include:"#numeric-literal"},{include:"#array-literal"}],"#numeric-literal":[{token:"constant.numeric.nlp",regex:/\b(?<=[^$])(?:0(?:x|X)[0-9a-fA-F]+|0(?:o|O)[0-7]+|0(?:b|B)(?:0|1)+|[0-9]+(?:\.[0-9]+)?(?:[eE][+-]?[0-9]+(?:\.[0-9]+)?)?)\b/}],"#array-literal":[{token:"meta.brace.square.nlp",regex:/\[/,push:[{token:"meta.brace.square.nlp",regex:/\]/,next:"pop"},{include:"#expression"},{defaultToken:"meta.array.literal.nlp"}]}]},this.normalizeRules()};s.metaData={scopeName:"source.nlp",fileTypes:["nlp","pat"],name:"NLP"},r.inherits(s,i),t.NLPHighlightRules=s}),define("ace/mode/folding/cstyle",["require","exports","module","ace/lib/oop","ace/range","ace/mode/folding/fold_mode"],function(e,t,n){"use strict";var r=e("../../lib/oop"),i=e("../../range").Range,s=e("./fold_mode").FoldMode,o=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\|[^|]*?$/,"|"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\|[^|]*?$/,"|"+e.end)))};r.inherits(o,s),function(){this.foldingStartMarker=/([\{\[\(])[^\}\]\)]*$|^\s*(\/\*)/,this.foldingStopMarker=/^[^\[\{\(]*([\}\]\)])|^[\s\*]*(\*\/)/,this.singleLineBlockCommentRe=/^\s*(\/\*).*\*\/\s*$/,this.tripleStarBlockCommentRe=/^\s*(\/\*\*\*).*\*\/\s*$/,this.startRegionRe=/^\s*(\/\*|\/\/)#?region\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var r=e.getLine(n);if(this.singleLineBlockCommentRe.test(r)&&!this.startRegionRe.test(r)&&!this.tripleStarBlockCommentRe.test(r))return"";var i=this._getFoldWidgetBase(e,t,n);return!i&&this.startRegionRe.test(r)?"start":i},this.getFoldWidgetRange=function(e,t,n,r){var i=e.getLine(n);if(this.startRegionRe.test(i))return this.getCommentRegionBlock(e,i,n);var s=i.match(this.foldingStartMarker);if(s){var o=s.index;if(s[1])return this.openingBracketBlock(e,s[1],n,o);var u=e.getCommentFoldRange(n,o+s[0].length,1);return u&&!u.isMultiLine()&&(r?u=this.getSectionRange(e,n):t!="all"&&(u=null)),u}if(t==="markbegin")return;var s=i.match(this.foldingStopMarker);if(s){var o=s.index+s[0].length;return s[1]?this.closingBracketBlock(e,s[1],n,o):e.getCommentFoldRange(n,o,-1)}},this.getSectionRange=function(e,t){var n=e.getLine(t),r=n.search(/\S/),s=t,o=n.length;t+=1;var u=t,a=e.getLength();while(++t<a){n=e.getLine(t);var f=n.search(/\S/);if(f===-1)continue;if(r>f)break;var l=this.getFoldWidgetRange(e,"all",t);if(l){if(l.start.row<=s)break;if(l.isMultiLine())t=l.end.row;else if(r==f)break}u=t}return new i(s,o,u,e.getLine(u).length)},this.getCommentRegionBlock=function(e,t,n){var r=t.search(/\s*$/),s=e.getLength(),o=n,u=/^\s*(?:\/\*|\/\/|--)#?(end)?region\b/,a=1;while(++n<s){t=e.getLine(n);var f=u.exec(t);if(!f)continue;f[1]?a--:a++;if(!a)break}var l=n;if(l>o)return new i(o,r,l,t.length)}}.call(o.prototype)}),define("ace/mode/nlp",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/nlp_highlight_rules","ace/mode/folding/cstyle"],function(e,t,n){"use strict";var r=e("../lib/oop"),i=e("./text").Mode,s=e("./nlp_highlight_rules").NLPHighlightRules,o=e("./folding/cstyle").FoldMode,u=function(){this.HighlightRules=s,this.foldingRules=new o};r.inherits(u,i),function(){this.$id="ace/mode/nlp"}.call(u.prototype),t.Mode=u});
                (function() {
                    window.require(["ace/mode/nlp"], function(m) {
                        if (typeof module == "object" && typeof exports == "object" && module) {
                            module.exports = m;
                        }
                    });
                })();
            